{-# LANGUAGE EmptyDataDecls #-}

module FileGen where

{-
  В этом упражнении необходимо разработать программу --- генератор текстовых файлов.
  Генератор должен поддерживать следующие режимы работы:
   * генерация файла, в котором N раз повторяется заданная строка;
   * генерация файла, содержащего M строк по N случайных целых чисел,
     разделённых пробелами.

  Все необходимые для работы генератора данные (режим работы, имя создаваемого файла,
  число строк и чисел в строке) должны задаваться параметрами командной
  строки. Эти параметры должны сохраняться в специально разработанном типе данных.

  При выполнении задания рекомендуется определять вспомогательные функции.

  Совет: для запуска функции main в ghci с заданием параметров командной строки удобно
  использовать команду интерпретатора :main, например:

     ghci> :main text hello.txt 1000 "Привет, мир"

  или

     ghci> :main random numbers.txt 1000 10
-}

import System.Environment

-- Тип данных для представления параметров генерации
data GenParams

-- Разбор параметров командной строки
parseArgs :: [String] -> Maybe GenParams
parseArgs [] = Nothing
parseArgs (mode : args) = undefined

-- Генерация файла
createFile :: GenParams -> IO ()
createFile = undefined

-- Вывод информации об использовании генератора
usage :: IO ()
usage = undefined

main :: IO ()
main = do
  args <- getArgs
  case parseArgs args of
    Just gp -> createFile gp
    Nothing -> usage
