import Control.Monad.State
import Control.Arrow

{-
  1) Пользуясь монадой State, реализовать функции для работы с очередью: enqueue, dequeue, top.
  2) Смоделируйте алгоритм FIFO замещения страниц виртуальной памяти: на вход алгоритму подаются
     номера используемых страниц виртуальной памяти, на выходе — моменты времени, в которые
     необходимо замещать загруженную ранее страницу. Постарайтесь написать программу так, чтобы
     её пользователю было понятно, что в ней происходит.
-}

type Que = [Int]


enq :: Int -> State Que ()
enq x = state (\xs -> ((), x:xs))

deq :: State Que Int
deq = state (last &&& init)

top :: State Que Int
top = state (\xs -> (last xs, xs))


-- wtf? Передаю пламенный привет Трофимчуку.
